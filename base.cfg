[buildout]
extends =
    https://raw.github.com/collective/buildout.plonetest/master/qa.cfg
    https://raw.github.com/plone/plone.app.robotframework/master/versions.cfg

parts +=
    code-analysis
    createcoverage
    i18ndude
    node
    omelette
    rebuild_i18n-sh
    releaser
    resourcehelper
    robot
    sphinxbuilder
    zopepy


[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
eggs =
    Plone
    plone.app.upgrade
    ${buildout:package-name}
    ${buildout:eggs}
zcml =

environment-vars = zope_i18n_compile_mo_files true
deprecation-warnings = on


# [instance]
# recipe = plone.recipe.zope2instance
# user = admin:admin
# http-address = 8080
# eggs =
#     Plone
#     Pillow
#     dexterity.membrane
#     Products.PrintingMailHost
#     Products.PDBDebugMode
#     pdbpp

[code-analysis]
recipe = plone.recipe.codeanalysis[recommended]
directory = ${buildout:directory}/dexterity/membrane
clean-lines = False
csslint = False
csslint-bin = ${buildout:directory}/bin/csslint
flake8-exclude = bootstrap.py,bootstrap-buildout.py,docs,*.egg.,omelette,.ropeproject
flake8 = True
# enable: S001 and I001 in time:
flake8-ignore = E501,P001,T000, Q000, P002, S001
flake8-max-complexity = 15
flake8-extensions =
    flake8-blind-except
    flake8-debugger
    flake8-coding
jshint = False
jshint-bin = bin/jshint
multiprocessing = True
pre-commit-hook = False
return-status-codes = True

[i18ndude]
recipe = zc.recipe.egg
eggs = i18ndude

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}

[versions]
# use latest version of coverage
coverage =

[zopepy]
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
scripts = zopepy

[coverage]
recipe = zc.recipe.egg
eggs = coverage


#[test-coverage]
#recipe = collective.recipe.template
#input = inline:
#    #!/bin/bash
#    ${buildout:directory}/bin/coverage run --source=${buildout:directory}/Products bin/test
#    ${buildout:directory}/bin/coverage html
#    ${buildout:directory}/bin/coverage report -m --fail-under=60
#    # Fail (exit status 1) if coverage returns exit status 2 (this happens
#    # when test coverage is below 100%.
#output = ${buildout:directory}/bin/test-coverage
#mode = 755


[robot]
recipe = zc.recipe.egg
eggs =
    ${test:eggs}
    plone.app.robotframework[debug,ride,reload]


[resourcehelper]
recipe = zc.recipe.egg:scripts
eggs =
    ${instance:eggs}
    Products.CMFPlone
scripts =
    plone-generate-gruntfile
    plone-compile-resources


[releaser]
recipe = zc.recipe.egg:scripts
eggs =
    zest.releaser[recommended]
    twine


[sphinxbuilder]
recipe = collective.recipe.sphinxbuilder
